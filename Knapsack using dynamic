#include <iostream>
#include <vector>
using namespace std;
int main() {
  vector<pair<int, int>> items = {{1, 2}, {3, 4}, {5, 6}, {7, 8}};
  int max_weight = 10;
  vector<vector<int>> dp(items.size() + 1, vector<int>(max_weight + 1));
  for (int i = 1; i <= items.size(); i++) {
    for (int j = 1; j <= max_weight; j++) {
      pair<int, int> item = items[i - 1];
      if (item.first > j) {
       dp[i][j] = dp[i - 1][j];
      } else {
        dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - item.first] + item.second);
      }
    }
  }
  vector<pair<int, int>> solution;
  int i = items.size();
  int j = max_weight;
  while (i > 0 && j > 0) {
    if (dp[i][j] != dp[i - 1][j]) {
      solution.push_back(items[i - 1]);
      j -= items[i - 1].first;
    }
    i--;
  }
  for (pair<int, int> item : solution) {
    cout << item.first << " " << item.second << endl;
  }
  return 0;
}
